
projekt Mikro.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000041c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003c8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000044c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000048c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000892  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000710  00000000  00000000  00000d4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000312  00000000  00000000  0000145e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001770  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f1  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000014e  00000000  00000000  00001ba5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001cf3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 6d 00 	call	0xda	; 0xda <main>
  78:	0c 94 e2 01 	jmp	0x3c4	; 0x3c4 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <t1_init>:
#include <util/delay.h>
#include <avr/interrupt.h>
#include <stdlib.h>

void t1_init(){
		TCCR1A |=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);		// kierunek na pb1 ,pb2, non inverted
  80:	e0 e8       	ldi	r30, 0x80	; 128
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	82 6a       	ori	r24, 0xA2	; 162
  88:	80 83       	st	Z, r24
		TCCR1B |=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //prescaler ckl/64, Fast PWM
  8a:	e1 e8       	ldi	r30, 0x81	; 129
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	80 81       	ld	r24, Z
  90:	8b 61       	ori	r24, 0x1B	; 27
  92:	80 83       	st	Z, r24
		ICR1=4999;	// fPWM=50 hz ( fcpu/(64*50)-1
  94:	87 e8       	ldi	r24, 0x87	; 135
  96:	93 e1       	ldi	r25, 0x13	; 19
  98:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
  9c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
  a0:	08 95       	ret

000000a2 <Czas_powrotu_imp>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	8a e0       	ldi	r24, 0x0A	; 10
  a4:	8a 95       	dec	r24
  a6:	f1 f7       	brne	.-4      	; 0xa4 <Czas_powrotu_imp+0x2>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <Czas_powrotu_imp+0x8>
{
	int obecnie=0;
	int narast_czas=0;

	_delay_us(2);
	PORTD |= (1 << PD2);	// stan wysoki na triger
  aa:	8b b1       	in	r24, 0x0b	; 11
  ac:	84 60       	ori	r24, 0x04	; 4
  ae:	8b b9       	out	0x0b, r24	; 11
  b0:	85 e3       	ldi	r24, 0x35	; 53
  b2:	8a 95       	dec	r24
  b4:	f1 f7       	brne	.-4      	; 0xb2 <Czas_powrotu_imp+0x10>
  b6:	00 00       	nop
	_delay_us(10);			// sygna³ minimum 10ms wed³ug katalogu (8 impulsow)	
	PORTD &= ~(1 << PD2);	//stan niski
  b8:	8b b1       	in	r24, 0x0b	; 11
  ba:	8b 7f       	andi	r24, 0xFB	; 251
  bc:	8b b9       	out	0x0b, r24	; 11


int Czas_powrotu_imp(void)
{
	int obecnie=0;
	int narast_czas=0;
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	90 e0       	ldi	r25, 0x00	; 0
}


int Czas_powrotu_imp(void)
{
	int obecnie=0;
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
	PORTD |= (1 << PD2);	// stan wysoki na triger
	_delay_us(10);			// sygna³ minimum 10ms wed³ug katalogu (8 impulsow)	
	PORTD &= ~(1 << PD2);	//stan niski

	
	while(obecnie==0)			//petla odczytu echo
  c6:	05 c0       	rjmp	.+10     	; 0xd2 <Czas_powrotu_imp+0x30>
	{
		while(PINB&(1<<PINB0)) //petla trwa dopóki stan wyoki pinu echo 
		{
			narast_czas++;
  c8:	01 96       	adiw	r24, 0x01	; 1
			obecnie = 1;
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	30 e0       	ldi	r19, 0x00	; 0
	PORTD &= ~(1 << PD2);	//stan niski

	
	while(obecnie==0)			//petla odczytu echo
	{
		while(PINB&(1<<PINB0)) //petla trwa dopóki stan wyoki pinu echo 
  ce:	18 99       	sbic	0x03, 0	; 3
  d0:	fb cf       	rjmp	.-10     	; 0xc8 <Czas_powrotu_imp+0x26>
	PORTD |= (1 << PD2);	// stan wysoki na triger
	_delay_us(10);			// sygna³ minimum 10ms wed³ug katalogu (8 impulsow)	
	PORTD &= ~(1 << PD2);	//stan niski

	
	while(obecnie==0)			//petla odczytu echo
  d2:	21 15       	cp	r18, r1
  d4:	31 05       	cpc	r19, r1
  d6:	d9 f3       	breq	.-10     	; 0xce <Czas_powrotu_imp+0x2c>
			obecnie = 1;
		}
	}

	return narast_czas;
}
  d8:	08 95       	ret

000000da <main>:
{
	/* Replace with your application code*/
	uint16_t zmiennab =300;
	uint16_t zmiennaa = 442;
	//uint16_t zeropredk = 375; //brak napiecia
	t1_init();
  da:	0e 94 40 00 	call	0x80	; 0x80 <t1_init>
	DDRB |= (1<<PB1) | (1<<PB2);
  de:	84 b1       	in	r24, 0x04	; 4
  e0:	86 60       	ori	r24, 0x06	; 6
  e2:	84 b9       	out	0x04, r24	; 4
	DDRD|= (1<<PD2);
  e4:	8a b1       	in	r24, 0x0a	; 10
  e6:	84 60       	ori	r24, 0x04	; 4
  e8:	8a b9       	out	0x0a, r24	; 10
	int czas;
	int odl;
	while (1)
	{
		Czas_powrotu_imp();
  ea:	0e 94 51 00 	call	0xa2	; 0xa2 <Czas_powrotu_imp>
		czas = Czas_powrotu_imp();
  ee:	0e 94 51 00 	call	0xa2	; 0xa2 <Czas_powrotu_imp>
		odl = czas*0.00862;
  f2:	bc 01       	movw	r22, r24
  f4:	99 0f       	add	r25, r25
  f6:	88 0b       	sbc	r24, r24
  f8:	99 0b       	sbc	r25, r25
  fa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <__floatsisf>
  fe:	27 ee       	ldi	r18, 0xE7	; 231
 100:	3a e3       	ldi	r19, 0x3A	; 58
 102:	4d e0       	ldi	r20, 0x0D	; 13
 104:	5c e3       	ldi	r21, 0x3C	; 60
 106:	0e 94 4d 01 	call	0x29a	; 0x29a <__mulsf3>
 10a:	0e 94 b1 00 	call	0x162	; 0x162 <__fixsfsi>
		
		if(odl<20)
 10e:	64 31       	cpi	r22, 0x14	; 20
 110:	71 05       	cpc	r23, r1
 112:	a4 f4       	brge	.+40     	; 0x13c <main+0x62>
		{	
			OCR1A=zmiennab;
 114:	8c e2       	ldi	r24, 0x2C	; 44
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 11c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			OCR1B=zmiennab;
 120:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 124:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	2f ef       	ldi	r18, 0xFF	; 255
 12a:	83 ed       	ldi	r24, 0xD3	; 211
 12c:	90 e3       	ldi	r25, 0x30	; 48
 12e:	21 50       	subi	r18, 0x01	; 1
 130:	80 40       	sbci	r24, 0x00	; 0
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0x54>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0x5e>
 138:	00 00       	nop
 13a:	d7 cf       	rjmp	.-82     	; 0xea <main+0x10>
			_delay_ms(1000);
			
		}
		else
		{	
			OCR1A=zmiennaa;
 13c:	8a eb       	ldi	r24, 0xBA	; 186
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 144:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
			OCR1B=zmiennab;
 148:	8c e2       	ldi	r24, 0x2C	; 44
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 150:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 154:	8f e3       	ldi	r24, 0x3F	; 63
 156:	9c e9       	ldi	r25, 0x9C	; 156
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0x7e>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0x84>
 15e:	00 00       	nop
 160:	c4 cf       	rjmp	.-120    	; 0xea <main+0x10>

00000162 <__fixsfsi>:
 162:	0e 94 b8 00 	call	0x170	; 0x170 <__fixunssfsi>
 166:	68 94       	set
 168:	b1 11       	cpse	r27, r1
 16a:	0c 94 47 01 	jmp	0x28e	; 0x28e <__fp_szero>
 16e:	08 95       	ret

00000170 <__fixunssfsi>:
 170:	0e 94 2c 01 	call	0x258	; 0x258 <__fp_splitA>
 174:	88 f0       	brcs	.+34     	; 0x198 <__fixunssfsi+0x28>
 176:	9f 57       	subi	r25, 0x7F	; 127
 178:	98 f0       	brcs	.+38     	; 0x1a0 <__fixunssfsi+0x30>
 17a:	b9 2f       	mov	r27, r25
 17c:	99 27       	eor	r25, r25
 17e:	b7 51       	subi	r27, 0x17	; 23
 180:	b0 f0       	brcs	.+44     	; 0x1ae <__fixunssfsi+0x3e>
 182:	e1 f0       	breq	.+56     	; 0x1bc <__fixunssfsi+0x4c>
 184:	66 0f       	add	r22, r22
 186:	77 1f       	adc	r23, r23
 188:	88 1f       	adc	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	1a f0       	brmi	.+6      	; 0x194 <__fixunssfsi+0x24>
 18e:	ba 95       	dec	r27
 190:	c9 f7       	brne	.-14     	; 0x184 <__fixunssfsi+0x14>
 192:	14 c0       	rjmp	.+40     	; 0x1bc <__fixunssfsi+0x4c>
 194:	b1 30       	cpi	r27, 0x01	; 1
 196:	91 f0       	breq	.+36     	; 0x1bc <__fixunssfsi+0x4c>
 198:	0e 94 46 01 	call	0x28c	; 0x28c <__fp_zero>
 19c:	b1 e0       	ldi	r27, 0x01	; 1
 19e:	08 95       	ret
 1a0:	0c 94 46 01 	jmp	0x28c	; 0x28c <__fp_zero>
 1a4:	67 2f       	mov	r22, r23
 1a6:	78 2f       	mov	r23, r24
 1a8:	88 27       	eor	r24, r24
 1aa:	b8 5f       	subi	r27, 0xF8	; 248
 1ac:	39 f0       	breq	.+14     	; 0x1bc <__fixunssfsi+0x4c>
 1ae:	b9 3f       	cpi	r27, 0xF9	; 249
 1b0:	cc f3       	brlt	.-14     	; 0x1a4 <__fixunssfsi+0x34>
 1b2:	86 95       	lsr	r24
 1b4:	77 95       	ror	r23
 1b6:	67 95       	ror	r22
 1b8:	b3 95       	inc	r27
 1ba:	d9 f7       	brne	.-10     	; 0x1b2 <__fixunssfsi+0x42>
 1bc:	3e f4       	brtc	.+14     	; 0x1cc <__fixunssfsi+0x5c>
 1be:	90 95       	com	r25
 1c0:	80 95       	com	r24
 1c2:	70 95       	com	r23
 1c4:	61 95       	neg	r22
 1c6:	7f 4f       	sbci	r23, 0xFF	; 255
 1c8:	8f 4f       	sbci	r24, 0xFF	; 255
 1ca:	9f 4f       	sbci	r25, 0xFF	; 255
 1cc:	08 95       	ret

000001ce <__floatunsisf>:
 1ce:	e8 94       	clt
 1d0:	09 c0       	rjmp	.+18     	; 0x1e4 <__floatsisf+0x12>

000001d2 <__floatsisf>:
 1d2:	97 fb       	bst	r25, 7
 1d4:	3e f4       	brtc	.+14     	; 0x1e4 <__floatsisf+0x12>
 1d6:	90 95       	com	r25
 1d8:	80 95       	com	r24
 1da:	70 95       	com	r23
 1dc:	61 95       	neg	r22
 1de:	7f 4f       	sbci	r23, 0xFF	; 255
 1e0:	8f 4f       	sbci	r24, 0xFF	; 255
 1e2:	9f 4f       	sbci	r25, 0xFF	; 255
 1e4:	99 23       	and	r25, r25
 1e6:	a9 f0       	breq	.+42     	; 0x212 <__floatsisf+0x40>
 1e8:	f9 2f       	mov	r31, r25
 1ea:	96 e9       	ldi	r25, 0x96	; 150
 1ec:	bb 27       	eor	r27, r27
 1ee:	93 95       	inc	r25
 1f0:	f6 95       	lsr	r31
 1f2:	87 95       	ror	r24
 1f4:	77 95       	ror	r23
 1f6:	67 95       	ror	r22
 1f8:	b7 95       	ror	r27
 1fa:	f1 11       	cpse	r31, r1
 1fc:	f8 cf       	rjmp	.-16     	; 0x1ee <__floatsisf+0x1c>
 1fe:	fa f4       	brpl	.+62     	; 0x23e <__floatsisf+0x6c>
 200:	bb 0f       	add	r27, r27
 202:	11 f4       	brne	.+4      	; 0x208 <__floatsisf+0x36>
 204:	60 ff       	sbrs	r22, 0
 206:	1b c0       	rjmp	.+54     	; 0x23e <__floatsisf+0x6c>
 208:	6f 5f       	subi	r22, 0xFF	; 255
 20a:	7f 4f       	sbci	r23, 0xFF	; 255
 20c:	8f 4f       	sbci	r24, 0xFF	; 255
 20e:	9f 4f       	sbci	r25, 0xFF	; 255
 210:	16 c0       	rjmp	.+44     	; 0x23e <__floatsisf+0x6c>
 212:	88 23       	and	r24, r24
 214:	11 f0       	breq	.+4      	; 0x21a <__floatsisf+0x48>
 216:	96 e9       	ldi	r25, 0x96	; 150
 218:	11 c0       	rjmp	.+34     	; 0x23c <__floatsisf+0x6a>
 21a:	77 23       	and	r23, r23
 21c:	21 f0       	breq	.+8      	; 0x226 <__floatsisf+0x54>
 21e:	9e e8       	ldi	r25, 0x8E	; 142
 220:	87 2f       	mov	r24, r23
 222:	76 2f       	mov	r23, r22
 224:	05 c0       	rjmp	.+10     	; 0x230 <__floatsisf+0x5e>
 226:	66 23       	and	r22, r22
 228:	71 f0       	breq	.+28     	; 0x246 <__floatsisf+0x74>
 22a:	96 e8       	ldi	r25, 0x86	; 134
 22c:	86 2f       	mov	r24, r22
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	2a f0       	brmi	.+10     	; 0x23e <__floatsisf+0x6c>
 234:	9a 95       	dec	r25
 236:	66 0f       	add	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	88 1f       	adc	r24, r24
 23c:	da f7       	brpl	.-10     	; 0x234 <__floatsisf+0x62>
 23e:	88 0f       	add	r24, r24
 240:	96 95       	lsr	r25
 242:	87 95       	ror	r24
 244:	97 f9       	bld	r25, 7
 246:	08 95       	ret

00000248 <__fp_split3>:
 248:	57 fd       	sbrc	r21, 7
 24a:	90 58       	subi	r25, 0x80	; 128
 24c:	44 0f       	add	r20, r20
 24e:	55 1f       	adc	r21, r21
 250:	59 f0       	breq	.+22     	; 0x268 <__fp_splitA+0x10>
 252:	5f 3f       	cpi	r21, 0xFF	; 255
 254:	71 f0       	breq	.+28     	; 0x272 <__fp_splitA+0x1a>
 256:	47 95       	ror	r20

00000258 <__fp_splitA>:
 258:	88 0f       	add	r24, r24
 25a:	97 fb       	bst	r25, 7
 25c:	99 1f       	adc	r25, r25
 25e:	61 f0       	breq	.+24     	; 0x278 <__fp_splitA+0x20>
 260:	9f 3f       	cpi	r25, 0xFF	; 255
 262:	79 f0       	breq	.+30     	; 0x282 <__fp_splitA+0x2a>
 264:	87 95       	ror	r24
 266:	08 95       	ret
 268:	12 16       	cp	r1, r18
 26a:	13 06       	cpc	r1, r19
 26c:	14 06       	cpc	r1, r20
 26e:	55 1f       	adc	r21, r21
 270:	f2 cf       	rjmp	.-28     	; 0x256 <__fp_split3+0xe>
 272:	46 95       	lsr	r20
 274:	f1 df       	rcall	.-30     	; 0x258 <__fp_splitA>
 276:	08 c0       	rjmp	.+16     	; 0x288 <__fp_splitA+0x30>
 278:	16 16       	cp	r1, r22
 27a:	17 06       	cpc	r1, r23
 27c:	18 06       	cpc	r1, r24
 27e:	99 1f       	adc	r25, r25
 280:	f1 cf       	rjmp	.-30     	; 0x264 <__fp_splitA+0xc>
 282:	86 95       	lsr	r24
 284:	71 05       	cpc	r23, r1
 286:	61 05       	cpc	r22, r1
 288:	08 94       	sec
 28a:	08 95       	ret

0000028c <__fp_zero>:
 28c:	e8 94       	clt

0000028e <__fp_szero>:
 28e:	bb 27       	eor	r27, r27
 290:	66 27       	eor	r22, r22
 292:	77 27       	eor	r23, r23
 294:	cb 01       	movw	r24, r22
 296:	97 f9       	bld	r25, 7
 298:	08 95       	ret

0000029a <__mulsf3>:
 29a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <__mulsf3x>
 29e:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__fp_round>
 2a2:	0e 94 c3 01 	call	0x386	; 0x386 <__fp_pscA>
 2a6:	38 f0       	brcs	.+14     	; 0x2b6 <__mulsf3+0x1c>
 2a8:	0e 94 ca 01 	call	0x394	; 0x394 <__fp_pscB>
 2ac:	20 f0       	brcs	.+8      	; 0x2b6 <__mulsf3+0x1c>
 2ae:	95 23       	and	r25, r21
 2b0:	11 f0       	breq	.+4      	; 0x2b6 <__mulsf3+0x1c>
 2b2:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_inf>
 2b6:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_nan>
 2ba:	11 24       	eor	r1, r1
 2bc:	0c 94 47 01 	jmp	0x28e	; 0x28e <__fp_szero>

000002c0 <__mulsf3x>:
 2c0:	0e 94 24 01 	call	0x248	; 0x248 <__fp_split3>
 2c4:	70 f3       	brcs	.-36     	; 0x2a2 <__mulsf3+0x8>

000002c6 <__mulsf3_pse>:
 2c6:	95 9f       	mul	r25, r21
 2c8:	c1 f3       	breq	.-16     	; 0x2ba <__mulsf3+0x20>
 2ca:	95 0f       	add	r25, r21
 2cc:	50 e0       	ldi	r21, 0x00	; 0
 2ce:	55 1f       	adc	r21, r21
 2d0:	62 9f       	mul	r22, r18
 2d2:	f0 01       	movw	r30, r0
 2d4:	72 9f       	mul	r23, r18
 2d6:	bb 27       	eor	r27, r27
 2d8:	f0 0d       	add	r31, r0
 2da:	b1 1d       	adc	r27, r1
 2dc:	63 9f       	mul	r22, r19
 2de:	aa 27       	eor	r26, r26
 2e0:	f0 0d       	add	r31, r0
 2e2:	b1 1d       	adc	r27, r1
 2e4:	aa 1f       	adc	r26, r26
 2e6:	64 9f       	mul	r22, r20
 2e8:	66 27       	eor	r22, r22
 2ea:	b0 0d       	add	r27, r0
 2ec:	a1 1d       	adc	r26, r1
 2ee:	66 1f       	adc	r22, r22
 2f0:	82 9f       	mul	r24, r18
 2f2:	22 27       	eor	r18, r18
 2f4:	b0 0d       	add	r27, r0
 2f6:	a1 1d       	adc	r26, r1
 2f8:	62 1f       	adc	r22, r18
 2fa:	73 9f       	mul	r23, r19
 2fc:	b0 0d       	add	r27, r0
 2fe:	a1 1d       	adc	r26, r1
 300:	62 1f       	adc	r22, r18
 302:	83 9f       	mul	r24, r19
 304:	a0 0d       	add	r26, r0
 306:	61 1d       	adc	r22, r1
 308:	22 1f       	adc	r18, r18
 30a:	74 9f       	mul	r23, r20
 30c:	33 27       	eor	r19, r19
 30e:	a0 0d       	add	r26, r0
 310:	61 1d       	adc	r22, r1
 312:	23 1f       	adc	r18, r19
 314:	84 9f       	mul	r24, r20
 316:	60 0d       	add	r22, r0
 318:	21 1d       	adc	r18, r1
 31a:	82 2f       	mov	r24, r18
 31c:	76 2f       	mov	r23, r22
 31e:	6a 2f       	mov	r22, r26
 320:	11 24       	eor	r1, r1
 322:	9f 57       	subi	r25, 0x7F	; 127
 324:	50 40       	sbci	r21, 0x00	; 0
 326:	9a f0       	brmi	.+38     	; 0x34e <__mulsf3_pse+0x88>
 328:	f1 f0       	breq	.+60     	; 0x366 <__mulsf3_pse+0xa0>
 32a:	88 23       	and	r24, r24
 32c:	4a f0       	brmi	.+18     	; 0x340 <__mulsf3_pse+0x7a>
 32e:	ee 0f       	add	r30, r30
 330:	ff 1f       	adc	r31, r31
 332:	bb 1f       	adc	r27, r27
 334:	66 1f       	adc	r22, r22
 336:	77 1f       	adc	r23, r23
 338:	88 1f       	adc	r24, r24
 33a:	91 50       	subi	r25, 0x01	; 1
 33c:	50 40       	sbci	r21, 0x00	; 0
 33e:	a9 f7       	brne	.-22     	; 0x32a <__mulsf3_pse+0x64>
 340:	9e 3f       	cpi	r25, 0xFE	; 254
 342:	51 05       	cpc	r21, r1
 344:	80 f0       	brcs	.+32     	; 0x366 <__mulsf3_pse+0xa0>
 346:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_inf>
 34a:	0c 94 47 01 	jmp	0x28e	; 0x28e <__fp_szero>
 34e:	5f 3f       	cpi	r21, 0xFF	; 255
 350:	e4 f3       	brlt	.-8      	; 0x34a <__mulsf3_pse+0x84>
 352:	98 3e       	cpi	r25, 0xE8	; 232
 354:	d4 f3       	brlt	.-12     	; 0x34a <__mulsf3_pse+0x84>
 356:	86 95       	lsr	r24
 358:	77 95       	ror	r23
 35a:	67 95       	ror	r22
 35c:	b7 95       	ror	r27
 35e:	f7 95       	ror	r31
 360:	e7 95       	ror	r30
 362:	9f 5f       	subi	r25, 0xFF	; 255
 364:	c1 f7       	brne	.-16     	; 0x356 <__mulsf3_pse+0x90>
 366:	fe 2b       	or	r31, r30
 368:	88 0f       	add	r24, r24
 36a:	91 1d       	adc	r25, r1
 36c:	96 95       	lsr	r25
 36e:	87 95       	ror	r24
 370:	97 f9       	bld	r25, 7
 372:	08 95       	ret

00000374 <__fp_inf>:
 374:	97 f9       	bld	r25, 7
 376:	9f 67       	ori	r25, 0x7F	; 127
 378:	80 e8       	ldi	r24, 0x80	; 128
 37a:	70 e0       	ldi	r23, 0x00	; 0
 37c:	60 e0       	ldi	r22, 0x00	; 0
 37e:	08 95       	ret

00000380 <__fp_nan>:
 380:	9f ef       	ldi	r25, 0xFF	; 255
 382:	80 ec       	ldi	r24, 0xC0	; 192
 384:	08 95       	ret

00000386 <__fp_pscA>:
 386:	00 24       	eor	r0, r0
 388:	0a 94       	dec	r0
 38a:	16 16       	cp	r1, r22
 38c:	17 06       	cpc	r1, r23
 38e:	18 06       	cpc	r1, r24
 390:	09 06       	cpc	r0, r25
 392:	08 95       	ret

00000394 <__fp_pscB>:
 394:	00 24       	eor	r0, r0
 396:	0a 94       	dec	r0
 398:	12 16       	cp	r1, r18
 39a:	13 06       	cpc	r1, r19
 39c:	14 06       	cpc	r1, r20
 39e:	05 06       	cpc	r0, r21
 3a0:	08 95       	ret

000003a2 <__fp_round>:
 3a2:	09 2e       	mov	r0, r25
 3a4:	03 94       	inc	r0
 3a6:	00 0c       	add	r0, r0
 3a8:	11 f4       	brne	.+4      	; 0x3ae <__fp_round+0xc>
 3aa:	88 23       	and	r24, r24
 3ac:	52 f0       	brmi	.+20     	; 0x3c2 <__fp_round+0x20>
 3ae:	bb 0f       	add	r27, r27
 3b0:	40 f4       	brcc	.+16     	; 0x3c2 <__fp_round+0x20>
 3b2:	bf 2b       	or	r27, r31
 3b4:	11 f4       	brne	.+4      	; 0x3ba <__fp_round+0x18>
 3b6:	60 ff       	sbrs	r22, 0
 3b8:	04 c0       	rjmp	.+8      	; 0x3c2 <__fp_round+0x20>
 3ba:	6f 5f       	subi	r22, 0xFF	; 255
 3bc:	7f 4f       	sbci	r23, 0xFF	; 255
 3be:	8f 4f       	sbci	r24, 0xFF	; 255
 3c0:	9f 4f       	sbci	r25, 0xFF	; 255
 3c2:	08 95       	ret

000003c4 <_exit>:
 3c4:	f8 94       	cli

000003c6 <__stop_program>:
 3c6:	ff cf       	rjmp	.-2      	; 0x3c6 <__stop_program>
